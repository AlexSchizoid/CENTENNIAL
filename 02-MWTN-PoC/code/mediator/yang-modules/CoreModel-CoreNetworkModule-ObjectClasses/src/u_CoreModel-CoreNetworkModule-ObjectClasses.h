
#ifndef _H_u_CoreModel_CoreNetworkModule_ObjectClasses
#define _H_u_CoreModel_CoreNetworkModule_ObjectClasses
/* 
 * Copyright (c) 2008-2012, Andy Bierman, All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump 2.5-5

    User SIL header
    module CoreModel-CoreNetworkModule-ObjectClasses
    revision 2016-03-27
    namespace uri:onf:CoreModel-CoreNetworkModule-ObjectClasses

 */

#include <xmlstring.h>

#include "agt.h"
#include "agt_cb.h"
#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "rpc.h"
#include "ses.h"
#include "status.h"
#include "val.h"
#include "y_CoreModel-CoreNetworkModule-ObjectClasses.h"

#ifdef __cplusplus
extern "C" {
#endif

/* list /NetworkElement/nameList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement_nameList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement_nameList;

/* list /NetworkElement/localIdList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement_localIdList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement_localIdList;

/* list /NetworkElement/_ltpRefList/nameList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_nameList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_nameList;

/* list /NetworkElement/_ltpRefList/localIdList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_localIdList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_localIdList;

/* leaf-list /NetworkElement/_ltpRefList/_serverLtpRefList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__serverLtpRefList_ {
    dlq_hdr_t qhdr;
    xmlChar *_serverLtpRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__serverLtpRefList;

/* leaf-list /NetworkElement/_ltpRefList/_clientLtpRefList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__clientLtpRefList_ {
    dlq_hdr_t qhdr;
    xmlChar *_clientLtpRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__clientLtpRefList;

/* list /NetworkElement/_ltpRefList/_lpList/nameList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList_nameList_ {
    dlq_hdr_t qhdr;
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList_nameList;

/* container /NetworkElement/_ltpRefList/_lpList/localIdList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList_localIdList_ {
    xmlChar *valueName;
    xmlChar *value;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList_localIdList;

/* list /NetworkElement/_ltpRefList/_lpList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t nameList;
    xmlChar *uuid;
    y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList_localIdList localIdList;
    xmlChar *layerProtocolName;
    uint64 configuredClientCapacity;
    xmlChar *lpDirection;
    boolean terminationState;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__lpList;

/* leaf-list /NetworkElement/_ltpRefList/physicalPortReference */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_physicalPortReference_ {
    dlq_hdr_t qhdr;
    xmlChar *physicalPortReference;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_physicalPortReference;

/* leaf-list /NetworkElement/_ltpRefList/_ltpRefList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__ltpRefList_ {
    dlq_hdr_t qhdr;
    xmlChar *_ltpRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList__ltpRefList;

/* list /NetworkElement/_ltpRefList */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t nameList;
    xmlChar *operationalState;
    xmlChar *administrativeControl;
    xmlChar *adminsatratveState;
    xmlChar *lifecycleState;
    dlq_hdr_t localIdList;
    xmlChar *uuid;
    dlq_hdr_t _serverLtpRefList;
    dlq_hdr_t _clientLtpRefList;
    dlq_hdr_t _lpList;
    dlq_hdr_t physicalPortReference;
    dlq_hdr_t _ltpRefList;
    xmlChar *ltpDirection;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement__ltpRefList;

/* list /NetworkElement */
typedef struct y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement_ {
    dlq_hdr_t qhdr;
    dlq_hdr_t nameList;
    xmlChar *operationalState;
    xmlChar *administrativeControl;
    xmlChar *adminsatratveState;
    xmlChar *lifecycleState;
    dlq_hdr_t localIdList;
    xmlChar *uuid;
    dlq_hdr_t _ltpRefList;
} y_CoreModel_CoreNetworkModule_ObjectClasses_T_NetworkElement;

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_nameList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/nameList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_nameList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_nameList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/nameList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_nameList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_nameList_edit
* 
* Edit database object callback
* Path: /NetworkElement/nameList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_nameList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement_nameList_valueName);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_operationalState_get
* 
* Get database object callback
* Path: /NetworkElement/operationalState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_operationalState_get (
    val_value_t *dstval,
    const xmlChar *k_NetworkElement_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_administrativeControl_edit
* 
* Edit database object callback
* Path: /NetworkElement/administrativeControl
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_administrativeControl_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_adminsatratveState_get
* 
* Get database object callback
* Path: /NetworkElement/adminsatratveState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_adminsatratveState_get (
    val_value_t *dstval,
    const xmlChar *k_NetworkElement_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_lifecycleState_edit
* 
* Edit database object callback
* Path: /NetworkElement/lifecycleState
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_lifecycleState_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_localIdList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/localIdList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_localIdList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_localIdList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/localIdList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_localIdList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_localIdList_edit
* 
* Edit database object callback
* Path: /NetworkElement/localIdList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_localIdList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_uuid_edit
* 
* Edit database object callback
* Path: /NetworkElement/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_nameList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/nameList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_nameList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_nameList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/nameList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_nameList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_nameList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/nameList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_nameList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_nameList_valueName);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_operationalState_get
* 
* Get database object callback
* Path: /NetworkElement/_ltpRefList/operationalState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_operationalState_get (
    val_value_t *dstval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_administrativeControl_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/administrativeControl
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_administrativeControl_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_adminsatratveState_get
* 
* Get database object callback
* Path: /NetworkElement/_ltpRefList/adminsatratveState
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_adminsatratveState_get (
    val_value_t *dstval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_lifecycleState_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/lifecycleState
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_lifecycleState_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_localIdList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/localIdList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_localIdList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_localIdList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/localIdList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_localIdList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_localIdList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/localIdList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_localIdList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_localIdList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_uuid_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__serverLtpRefList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_serverLtpRefList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__serverLtpRefList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__clientLtpRefList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_clientLtpRefList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__clientLtpRefList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_nameList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/nameList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_nameList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_nameList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/nameList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_nameList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_nameList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/nameList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_nameList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_nameList_valueName);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_uuid_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_localIdList_valueName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/localIdList/valueName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_localIdList_valueName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_localIdList_value_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/localIdList/value
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_localIdList_value_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_localIdList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/localIdList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_localIdList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_layerProtocolName_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/layerProtocolName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_layerProtocolName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_configuredClientCapacity_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/configuredClientCapacity
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_configuredClientCapacity_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_lpDirection_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/lpDirection
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_lpDirection_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_terminationState_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList/terminationState
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_terminationState_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_lpList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__lpList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid,
    const xmlChar *k_NetworkElement__ltpRefList__lpList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_physicalPortReference_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/physicalPortReference
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_physicalPortReference_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__ltpRefList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/_ltpRefList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList__ltpRefList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_ltpDirection_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList/ltpDirection
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_ltpDirection_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_edit
* 
* Edit database object callback
* Path: /NetworkElement/_ltpRefList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement__ltpRefList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid,
    const xmlChar *k_NetworkElement__ltpRefList_uuid);


/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_edit
* 
* Edit database object callback
* Path: /NetworkElement
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_NetworkElement_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_NetworkElement_uuid);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_init
* 
* initialize the CoreModel-CoreNetworkModule-ObjectClasses server instrumentation library
* 
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_init2
* 
* SIL init phase 2: non-config data structures
* Called after running config is loaded
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_CoreModel_CoreNetworkModule_ObjectClasses_init2 (void);

/********************************************************************
* FUNCTION u_CoreModel_CoreNetworkModule_ObjectClasses_cleanup
*    cleanup the server instrumentation library
* 
********************************************************************/
extern void u_CoreModel_CoreNetworkModule_ObjectClasses_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif