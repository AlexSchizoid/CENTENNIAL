
#ifndef _H_u_MicrowaveModel_ObjectClasses_MwConnection
#define _H_u_MicrowaveModel_ObjectClasses_MwConnection
/* 
 * Copyright (c) 2008-2012, Andy Bierman, All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump 2.5-5

    User SIL header
    module MicrowaveModel-ObjectClasses-MwConnection
    revision 2016-03-23
    namespace uri:onf:MicrowaveModel-ObjectClasses-MwConnection

 */

#include <xmlstring.h>

#include "agt.h"
#include "agt_cb.h"
#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "rpc.h"
#include "ses.h"
#include "status.h"
#include "val.h"
#include "y_MicrowaveModel-ObjectClasses-MwConnection.h"

#ifdef __cplusplus
extern "C" {
#endif

/* list /MW_AirInterface_Pac/airInterfaceCapabilityList/scriptList */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_ {
    dlq_hdr_t qhdr;
    xmlChar *scriptID;
    uint64 channelBandwidth;
    uint64 modulationScheme;
    int64 txPowerMin;
    int64 txPowerMax;
    boolean xpicIsAvail;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList;

/* list /MW_AirInterface_Pac/airInterfaceCapabilityList */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_airInterfaceCapabilityList_ {
    dlq_hdr_t qhdr;
    xmlChar *airInterfaceID;
    xmlChar *typeOfEquipment;
    xmlChar *supportedChannelPlans;
    uint64 txFrequencyMin;
    uint64 txFrequencyMax;
    uint64 rxFrequencyMin;
    uint64 rxFrequencyMax;
    boolean adaptiveModulationIsAvail;
    dlq_hdr_t scriptList;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_airInterfaceCapabilityList;

/* container /MW_AirInterface_Pac/airInterfaceConfiguration */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_airInterfaceConfiguration_ {
    xmlChar *airInterfaceName;
    xmlChar *radioSignalId;
    uint64 txFrequency;
    uint64 rxFrequency;
    uint64 txChannelBandwidth;
    uint64 rxChannelBandwidth;
    boolean powerIsOn;
    boolean transmitterIsOn;
    int64 txPower;
    boolean adaptiveModulationIsOn;
    uint64 modulationMin;
    uint64 modulationMax;
    boolean xpicIsOn;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_airInterfaceConfiguration;

/* container /MW_AirInterface_Pac/airInterfaceStatus */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_airInterfaceStatus_ {
    uint64 txFrequencyCur;
    uint64 rxFrequencyCur;
    int64 txLevelCur;
    int64 rxLevelCur;
    int64 snrCur;
    boolean linkIsUp;
    boolean xpicIsUp;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_airInterfaceStatus;

/* leaf-list /MW_AirInterface_Pac/airInterfaceCurrentProblemList/problemList */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_airInterfaceCurrentProblemList_problemList_ {
    dlq_hdr_t qhdr;
    xmlChar *problemList;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_airInterfaceCurrentProblemList_problemList;

/* container /MW_AirInterface_Pac/airInterfaceCurrentProblemList */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_airInterfaceCurrentProblemList_ {
    dlq_hdr_t problemList;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_airInterfaceCurrentProblemList;

/* list /MW_AirInterface_Pac */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_ {
    dlq_hdr_t qhdr;
    xmlChar *layerProtocol;
    dlq_hdr_t airInterfaceCapabilityList;
    y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_airInterfaceConfiguration airInterfaceConfiguration;
    y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_airInterfaceStatus airInterfaceStatus;
    y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac_airInterfaceCurrentProblemList airInterfaceCurrentProblemList;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_AirInterface_Pac;

/* container /MW_Structure_Pac/structureCapability */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Structure_Pac_structureCapability_ {
    xmlChar *structureID;
    uint64 totalNumberOfTimeSlots;
    uint64 timeSlotCapacity;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Structure_Pac_structureCapability;

/* container /MW_Structure_Pac/structureConfiguration */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Structure_Pac_structureConfiguration_ {
    xmlChar *serverID;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Structure_Pac_structureConfiguration;

/* list /MW_Structure_Pac/structureStatus/timeSlotStatusList */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Structure_Pac_structureStatus_timeSlotStatusList_ {
    dlq_hdr_t qhdr;
    xmlChar *structureID;
    xmlChar *timeSlotID;
    xmlChar *operationalStatus;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Structure_Pac_structureStatus_timeSlotStatusList;

/* container /MW_Structure_Pac/structureStatus */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Structure_Pac_structureStatus_ {
    dlq_hdr_t timeSlotStatusList;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Structure_Pac_structureStatus;

/* list /MW_Structure_Pac */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Structure_Pac_ {
    dlq_hdr_t qhdr;
    xmlChar *layerProtocol;
    y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Structure_Pac_structureCapability structureCapability;
    y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Structure_Pac_structureConfiguration structureConfiguration;
    y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Structure_Pac_structureStatus structureStatus;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Structure_Pac;

/* list /MW_Container_Pac/containerCapability/availableKindsOfContainerList */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Container_Pac_containerCapability_availableKindsOfContainerList_ {
    dlq_hdr_t qhdr;
    xmlChar *uuid;
    xmlChar *containerName;
    uint64 numberOfTimeSlotsRequired;
    boolean bundlingIsAvail;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Container_Pac_containerCapability_availableKindsOfContainerList;

/* container /MW_Container_Pac/containerCapability */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Container_Pac_containerCapability_ {
    xmlChar *containerID;
    dlq_hdr_t availableKindsOfContainerList;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Container_Pac_containerCapability;

/* container /MW_Container_Pac/containerConfiguration/container */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Container_Pac_containerConfiguration_container_ {
    xmlChar *uuid;
    xmlChar *containerName;
    uint64 numberOfTimeSlotsRequired;
    boolean bundlingIsAvail;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Container_Pac_containerConfiguration_container;

/* list /MW_Container_Pac/containerConfiguration/timeSlotIDList */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Container_Pac_containerConfiguration_timeSlotIDList_ {
    dlq_hdr_t qhdr;
    xmlChar *structureID;
    xmlChar *timeSlotID;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Container_Pac_containerConfiguration_timeSlotIDList;

/* container /MW_Container_Pac/containerConfiguration */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Container_Pac_containerConfiguration_ {
    y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Container_Pac_containerConfiguration_container container;
    dlq_hdr_t timeSlotIDList;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Container_Pac_containerConfiguration;

/* list /MW_Container_Pac */
typedef struct y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Container_Pac_ {
    dlq_hdr_t qhdr;
    xmlChar *layerProtocol;
    y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Container_Pac_containerCapability containerCapability;
    y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Container_Pac_containerConfiguration containerConfiguration;
    xmlChar *containerStatus;
} y_MicrowaveModel_ObjectClasses_MwConnection_T_MW_Container_Pac;

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_layerProtocol_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/layerProtocol
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_layerProtocol_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapabilityList/airInterfaceID
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_typeOfEquipment_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapabilityList/typeOfEquipment
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_typeOfEquipment_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_supportedChannelPlans_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapabilityList/supportedChannelPlans
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_supportedChannelPlans_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_txFrequencyMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapabilityList/txFrequencyMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_txFrequencyMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_txFrequencyMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapabilityList/txFrequencyMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_txFrequencyMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_rxFrequencyMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapabilityList/rxFrequencyMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_rxFrequencyMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_rxFrequencyMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapabilityList/rxFrequencyMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_rxFrequencyMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_adaptiveModulationIsAvail_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapabilityList/adaptiveModulationIsAvail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_adaptiveModulationIsAvail_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_scriptID_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapabilityList/scriptList/scriptID
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_scriptID_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_scriptID);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_channelBandwidth_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapabilityList/scriptList/channelBandwidth
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_channelBandwidth_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_scriptID);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_modulationScheme_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapabilityList/scriptList/modulationScheme
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_modulationScheme_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_scriptID);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_txPowerMin_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapabilityList/scriptList/txPowerMin
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_txPowerMin_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_scriptID);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_txPowerMax_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapabilityList/scriptList/txPowerMax
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_txPowerMax_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_scriptID);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_xpicIsAvail_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCapabilityList/scriptList/xpicIsAvail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_xpicIsAvail_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_airInterfaceID,
    const xmlChar *k_MW_AirInterface_Pac_airInterfaceCapabilityList_scriptList_scriptID);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_airInterfaceName_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/airInterfaceName
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_airInterfaceName_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_radioSignalId_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/radioSignalId
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_radioSignalId_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_txFrequency_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/txFrequency
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_txFrequency_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_rxFrequency_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/rxFrequency
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_rxFrequency_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_txChannelBandwidth_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/txChannelBandwidth
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_txChannelBandwidth_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_rxChannelBandwidth_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/rxChannelBandwidth
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_rxChannelBandwidth_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_powerIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/powerIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_powerIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_transmitterIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/transmitterIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_transmitterIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_txPower_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/txPower
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_txPower_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_adaptiveModulationIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/adaptiveModulationIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_adaptiveModulationIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_modulationMin_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/modulationMin
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_modulationMin_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_modulationMax_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/modulationMax
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_modulationMax_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_xpicIsOn_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration/xpicIsOn
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_xpicIsOn_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac/airInterfaceConfiguration
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceConfiguration_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceStatus_txFrequencyCur_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/txFrequencyCur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceStatus_txFrequencyCur_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceStatus_rxFrequencyCur_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/rxFrequencyCur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceStatus_rxFrequencyCur_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceStatus_txLevelCur_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/txLevelCur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceStatus_txLevelCur_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceStatus_rxLevelCur_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/rxLevelCur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceStatus_rxLevelCur_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceStatus_snrCur_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/snrCur
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceStatus_snrCur_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceStatus_linkIsUp_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/linkIsUp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceStatus_linkIsUp_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceStatus_xpicIsUp_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceStatus/xpicIsUp
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceStatus_xpicIsUp_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCurrentProblemList_problemList_get
* 
* Get database object callback
* Path: /MW_AirInterface_Pac/airInterfaceCurrentProblemList/problemList
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_airInterfaceCurrentProblemList_problemList_get (
    val_value_t *dstval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_edit
* 
* Edit database object callback
* Path: /MW_AirInterface_Pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_AirInterface_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_layerProtocol_edit
* 
* Edit database object callback
* Path: /MW_Structure_Pac/layerProtocol
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_layerProtocol_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_Structure_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureCapability_structureID_get
* 
* Get database object callback
* Path: /MW_Structure_Pac/structureCapability/structureID
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureCapability_structureID_get (
    val_value_t *dstval,
    const xmlChar *k_MW_Structure_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureCapability_totalNumberOfTimeSlots_get
* 
* Get database object callback
* Path: /MW_Structure_Pac/structureCapability/totalNumberOfTimeSlots
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureCapability_totalNumberOfTimeSlots_get (
    val_value_t *dstval,
    const xmlChar *k_MW_Structure_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureCapability_timeSlotCapacity_get
* 
* Get database object callback
* Path: /MW_Structure_Pac/structureCapability/timeSlotCapacity
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureCapability_timeSlotCapacity_get (
    val_value_t *dstval,
    const xmlChar *k_MW_Structure_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureConfiguration_serverID_edit
* 
* Edit database object callback
* Path: /MW_Structure_Pac/structureConfiguration/serverID
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureConfiguration_serverID_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_Structure_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureConfiguration_edit
* 
* Edit database object callback
* Path: /MW_Structure_Pac/structureConfiguration
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureConfiguration_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_Structure_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureStatus_timeSlotStatusList_structureID_get
* 
* Get database object callback
* Path: /MW_Structure_Pac/structureStatus/timeSlotStatusList/structureID
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureStatus_timeSlotStatusList_structureID_get (
    val_value_t *dstval,
    const xmlChar *k_MW_Structure_Pac_layerProtocol,
    const xmlChar *k_MW_Structure_Pac_structureStatus_timeSlotStatusList_structureID,
    const xmlChar *k_MW_Structure_Pac_structureStatus_timeSlotStatusList_timeSlotID);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureStatus_timeSlotStatusList_timeSlotID_get
* 
* Get database object callback
* Path: /MW_Structure_Pac/structureStatus/timeSlotStatusList/timeSlotID
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureStatus_timeSlotStatusList_timeSlotID_get (
    val_value_t *dstval,
    const xmlChar *k_MW_Structure_Pac_layerProtocol,
    const xmlChar *k_MW_Structure_Pac_structureStatus_timeSlotStatusList_structureID,
    const xmlChar *k_MW_Structure_Pac_structureStatus_timeSlotStatusList_timeSlotID);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureStatus_timeSlotStatusList_operationalStatus_get
* 
* Get database object callback
* Path: /MW_Structure_Pac/structureStatus/timeSlotStatusList/operationalStatus
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_structureStatus_timeSlotStatusList_operationalStatus_get (
    val_value_t *dstval,
    const xmlChar *k_MW_Structure_Pac_layerProtocol,
    const xmlChar *k_MW_Structure_Pac_structureStatus_timeSlotStatusList_structureID,
    const xmlChar *k_MW_Structure_Pac_structureStatus_timeSlotStatusList_timeSlotID);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_edit
* 
* Edit database object callback
* Path: /MW_Structure_Pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_Structure_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_layerProtocol_edit
* 
* Edit database object callback
* Path: /MW_Container_Pac/layerProtocol
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_layerProtocol_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_Container_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerCapability_containerID_get
* 
* Get database object callback
* Path: /MW_Container_Pac/containerCapability/containerID
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerCapability_containerID_get (
    val_value_t *dstval,
    const xmlChar *k_MW_Container_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerCapability_availableKindsOfContainerList_uuid_get
* 
* Get database object callback
* Path: /MW_Container_Pac/containerCapability/availableKindsOfContainerList/uuid
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerCapability_availableKindsOfContainerList_uuid_get (
    val_value_t *dstval,
    const xmlChar *k_MW_Container_Pac_layerProtocol,
    const xmlChar *k_MW_Container_Pac_containerCapability_availableKindsOfContainerList_uuid);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerCapability_availableKindsOfContainerList_containerName_get
* 
* Get database object callback
* Path: /MW_Container_Pac/containerCapability/availableKindsOfContainerList/containerName
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerCapability_availableKindsOfContainerList_containerName_get (
    val_value_t *dstval,
    const xmlChar *k_MW_Container_Pac_layerProtocol,
    const xmlChar *k_MW_Container_Pac_containerCapability_availableKindsOfContainerList_uuid);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerCapability_availableKindsOfContainerList_numberOfTimeSlotsRequired_get
* 
* Get database object callback
* Path: /MW_Container_Pac/containerCapability/availableKindsOfContainerList/numberOfTimeSlotsRequired
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerCapability_availableKindsOfContainerList_numberOfTimeSlotsRequired_get (
    val_value_t *dstval,
    const xmlChar *k_MW_Container_Pac_layerProtocol,
    const xmlChar *k_MW_Container_Pac_containerCapability_availableKindsOfContainerList_uuid);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerCapability_availableKindsOfContainerList_bundlingIsAvail_get
* 
* Get database object callback
* Path: /MW_Container_Pac/containerCapability/availableKindsOfContainerList/bundlingIsAvail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerCapability_availableKindsOfContainerList_bundlingIsAvail_get (
    val_value_t *dstval,
    const xmlChar *k_MW_Container_Pac_layerProtocol,
    const xmlChar *k_MW_Container_Pac_containerCapability_availableKindsOfContainerList_uuid);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_container_uuid_edit
* 
* Edit database object callback
* Path: /MW_Container_Pac/containerConfiguration/container/uuid
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_container_uuid_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_Container_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_container_containerName_get
* 
* Get database object callback
* Path: /MW_Container_Pac/containerConfiguration/container/containerName
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_container_containerName_get (
    val_value_t *dstval,
    const xmlChar *k_MW_Container_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_container_numberOfTimeSlotsRequired_get
* 
* Get database object callback
* Path: /MW_Container_Pac/containerConfiguration/container/numberOfTimeSlotsRequired
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_container_numberOfTimeSlotsRequired_get (
    val_value_t *dstval,
    const xmlChar *k_MW_Container_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_container_bundlingIsAvail_get
* 
* Get database object callback
* Path: /MW_Container_Pac/containerConfiguration/container/bundlingIsAvail
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_container_bundlingIsAvail_get (
    val_value_t *dstval,
    const xmlChar *k_MW_Container_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_container_edit
* 
* Edit database object callback
* Path: /MW_Container_Pac/containerConfiguration/container
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_container_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_Container_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_timeSlotIDList_structureID_edit
* 
* Edit database object callback
* Path: /MW_Container_Pac/containerConfiguration/timeSlotIDList/structureID
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_timeSlotIDList_structureID_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_Container_Pac_layerProtocol,
    const xmlChar *k_MW_Container_Pac_containerConfiguration_timeSlotIDList_structureID,
    const xmlChar *k_MW_Container_Pac_containerConfiguration_timeSlotIDList_timeSlotID);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_timeSlotIDList_timeSlotID_edit
* 
* Edit database object callback
* Path: /MW_Container_Pac/containerConfiguration/timeSlotIDList/timeSlotID
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_timeSlotIDList_timeSlotID_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_Container_Pac_layerProtocol,
    const xmlChar *k_MW_Container_Pac_containerConfiguration_timeSlotIDList_structureID,
    const xmlChar *k_MW_Container_Pac_containerConfiguration_timeSlotIDList_timeSlotID);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_timeSlotIDList_edit
* 
* Edit database object callback
* Path: /MW_Container_Pac/containerConfiguration/timeSlotIDList
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_timeSlotIDList_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_Container_Pac_layerProtocol,
    const xmlChar *k_MW_Container_Pac_containerConfiguration_timeSlotIDList_structureID,
    const xmlChar *k_MW_Container_Pac_containerConfiguration_timeSlotIDList_timeSlotID);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_edit
* 
* Edit database object callback
* Path: /MW_Container_Pac/containerConfiguration
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerConfiguration_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_Container_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerStatus_get
* 
* Get database object callback
* Path: /MW_Container_Pac/containerStatus
* Fill in 'dstval' contents
* 
* INPUTS:
*     see ncx/getcb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_containerStatus_get (
    val_value_t *dstval,
    const xmlChar *k_MW_Container_Pac_layerProtocol);


/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_edit
* 
* Edit database object callback
* Path: /MW_Container_Pac
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_MW_Container_Pac_layerProtocol);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_init
* 
* initialize the MicrowaveModel-ObjectClasses-MwConnection server instrumentation library
* 
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_init2
* 
* SIL init phase 2: non-config data structures
* Called after running config is loaded
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_MicrowaveModel_ObjectClasses_MwConnection_init2 (void);

/********************************************************************
* FUNCTION u_MicrowaveModel_ObjectClasses_MwConnection_cleanup
*    cleanup the server instrumentation library
* 
********************************************************************/
extern void u_MicrowaveModel_ObjectClasses_MwConnection_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif