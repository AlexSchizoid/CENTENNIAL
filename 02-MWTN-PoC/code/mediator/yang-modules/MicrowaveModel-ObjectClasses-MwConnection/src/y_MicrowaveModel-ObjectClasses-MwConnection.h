
#ifndef _H_y_MicrowaveModel_ObjectClasses_MwConnection
#define _H_y_MicrowaveModel_ObjectClasses_MwConnection
/* 
 * Copyright (c) 2008-2012, Andy Bierman, All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump 2.5-5

    Yuma SIL header
    module MicrowaveModel-ObjectClasses-MwConnection
    revision 2016-03-23
    namespace uri:onf:MicrowaveModel-ObjectClasses-MwConnection

 */

#include <xmlstring.h>

#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "status.h"
#include "val.h"

#ifdef __cplusplus
extern "C" {
#endif

#define y_MicrowaveModel_ObjectClasses_MwConnection_M_MicrowaveModel_ObjectClasses_MwConnection (const xmlChar *)"MicrowaveModel-ObjectClasses-MwConnection"
#define y_MicrowaveModel_ObjectClasses_MwConnection_R_MicrowaveModel_ObjectClasses_MwConnection (const xmlChar *)"2016-03-23"

#define y_MicrowaveModel_ObjectClasses_MwConnection_N_MW_AirInterface_Pac (const xmlChar *)"MW_AirInterface_Pac"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_MW_Container_Pac (const xmlChar *)"MW_Container_Pac"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_MW_Structure_Pac (const xmlChar *)"MW_Structure_Pac"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_adaptiveModulationIsAvail (const xmlChar *)"adaptiveModulationIsAvail"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_adaptiveModulationIsOn (const xmlChar *)"adaptiveModulationIsOn"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_airInterfaceCapabilityList (const xmlChar *)"airInterfaceCapabilityList"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_airInterfaceConfiguration (const xmlChar *)"airInterfaceConfiguration"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_airInterfaceCurrentProblemList (const xmlChar *)"airInterfaceCurrentProblemList"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_airInterfaceID (const xmlChar *)"airInterfaceID"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_airInterfaceName (const xmlChar *)"airInterfaceName"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_airInterfaceStatus (const xmlChar *)"airInterfaceStatus"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_availableKindsOfContainerList (const xmlChar *)"availableKindsOfContainerList"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_bundlingIsAvail (const xmlChar *)"bundlingIsAvail"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_channelBandwidth (const xmlChar *)"channelBandwidth"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_container (const xmlChar *)"container"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_containerCapability (const xmlChar *)"containerCapability"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_containerConfiguration (const xmlChar *)"containerConfiguration"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_containerID (const xmlChar *)"containerID"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_containerName (const xmlChar *)"containerName"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_containerStatus (const xmlChar *)"containerStatus"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_layerProtocol (const xmlChar *)"layerProtocol"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_linkIsUp (const xmlChar *)"linkIsUp"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_modulationMax (const xmlChar *)"modulationMax"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_modulationMin (const xmlChar *)"modulationMin"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_modulationScheme (const xmlChar *)"modulationScheme"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_numberOfTimeSlotsRequired (const xmlChar *)"numberOfTimeSlotsRequired"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_operationalStatus (const xmlChar *)"operationalStatus"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_powerIsOn (const xmlChar *)"powerIsOn"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_problemList (const xmlChar *)"problemList"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_radioSignalId (const xmlChar *)"radioSignalId"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_rxChannelBandwidth (const xmlChar *)"rxChannelBandwidth"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_rxFrequency (const xmlChar *)"rxFrequency"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_rxFrequencyCur (const xmlChar *)"rxFrequencyCur"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_rxFrequencyMax (const xmlChar *)"rxFrequencyMax"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_rxFrequencyMin (const xmlChar *)"rxFrequencyMin"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_rxLevelCur (const xmlChar *)"rxLevelCur"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_scriptID (const xmlChar *)"scriptID"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_scriptList (const xmlChar *)"scriptList"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_serverID (const xmlChar *)"serverID"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_snrCur (const xmlChar *)"snrCur"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_structureCapability (const xmlChar *)"structureCapability"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_structureConfiguration (const xmlChar *)"structureConfiguration"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_structureID (const xmlChar *)"structureID"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_structureStatus (const xmlChar *)"structureStatus"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_supportedChannelPlans (const xmlChar *)"supportedChannelPlans"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_timeSlotCapacity (const xmlChar *)"timeSlotCapacity"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_timeSlotID (const xmlChar *)"timeSlotID"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_timeSlotIDList (const xmlChar *)"timeSlotIDList"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_timeSlotStatusList (const xmlChar *)"timeSlotStatusList"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_totalNumberOfTimeSlots (const xmlChar *)"totalNumberOfTimeSlots"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_transmitterIsOn (const xmlChar *)"transmitterIsOn"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_txChannelBandwidth (const xmlChar *)"txChannelBandwidth"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_txFrequency (const xmlChar *)"txFrequency"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_txFrequencyCur (const xmlChar *)"txFrequencyCur"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_txFrequencyMax (const xmlChar *)"txFrequencyMax"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_txFrequencyMin (const xmlChar *)"txFrequencyMin"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_txLevelCur (const xmlChar *)"txLevelCur"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_txPower (const xmlChar *)"txPower"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_txPowerMax (const xmlChar *)"txPowerMax"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_txPowerMin (const xmlChar *)"txPowerMin"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_typeOfEquipment (const xmlChar *)"typeOfEquipment"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_uuid (const xmlChar *)"uuid"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_xpicIsAvail (const xmlChar *)"xpicIsAvail"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_xpicIsOn (const xmlChar *)"xpicIsOn"
#define y_MicrowaveModel_ObjectClasses_MwConnection_N_xpicIsUp (const xmlChar *)"xpicIsUp"
/********************************************************************
* FUNCTION y_MicrowaveModel_ObjectClasses_MwConnection_init
* 
* initialize the MicrowaveModel-ObjectClasses-MwConnection server instrumentation library
* 
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t y_MicrowaveModel_ObjectClasses_MwConnection_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION y_MicrowaveModel_ObjectClasses_MwConnection_init2
* 
* SIL init phase 2: non-config data structures
* Called after running config is loaded
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t y_MicrowaveModel_ObjectClasses_MwConnection_init2 (void);

/********************************************************************
* FUNCTION y_MicrowaveModel_ObjectClasses_MwConnection_cleanup
*    cleanup the server instrumentation library
* 
********************************************************************/
extern void y_MicrowaveModel_ObjectClasses_MwConnection_cleanup (void);

status_t MicrowaveModel_ObjectClasses_MwConnection_MW_AirInterface_Pac_mro (val_value_t *parentval);
status_t MicrowaveModel_ObjectClasses_MwConnection_MW_Structure_Pac_mro (val_value_t *parentval);
status_t MicrowaveModel_ObjectClasses_MwConnection_MW_Container_Pac_mro (val_value_t *parentval);


#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif