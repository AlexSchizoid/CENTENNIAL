
#ifndef _H_u_ietf_interfaces
#define _H_u_ietf_interfaces
/* 
 * Copyright (c) 2008-2012, Andy Bierman, All Rights Reserved.
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 *

*** Generated by yangdump 2.5-5

    User SIL header
    module ietf-interfaces
    revision 2014-05-08
    namespace urn:ietf:params:xml:ns:yang:ietf-interfaces
    organization IETF NETMOD (NETCONF Data Modeling Language) Working Group

 */

#include <xmlstring.h>

#include "agt.h"
#include "agt_cb.h"
#include "dlq.h"
#include "ncxtypes.h"
#include "op.h"
#include "rpc.h"
#include "ses.h"
#include "status.h"
#include "val.h"
#include "y_ietf-interfaces.h"

#ifdef __cplusplus
extern "C" {
#endif
/* Feature ietf-interfaces:arbitrary-names
 * Comment out to disable */
#define u_ietf_interfaces_F_arbitrary_names 1

/* Feature ietf-interfaces:pre-provisioning
 * Comment out to disable */
#define u_ietf_interfaces_F_pre_provisioning 1

/* Feature ietf-interfaces:if-mib
 * Comment out to disable */
#define u_ietf_interfaces_F_if_mib 1



/* list /interfaces/interface */
typedef struct y_ietf_interfaces_T_interfaces_interface_ {
    dlq_hdr_t qhdr;
    xmlChar *name;
    xmlChar *description;
    val_idref_t *type;
    boolean enabled;

#ifdef u_ietf_interfaces_F_if_mib
    xmlChar *link_up_down_trap_enable;
#endif /* u_ietf_interfaces_F_if_mib */
} y_ietf_interfaces_T_interfaces_interface;

/* container /interfaces */
typedef struct y_ietf_interfaces_T_interfaces_ {
    dlq_hdr_t interface;
} y_ietf_interfaces_T_interfaces;

/* leaf-list /interfaces-state/interface/higher-layer-if */
typedef struct y_ietf_interfaces_T_interfaces_state_interface_higher_layer_if_ {
    dlq_hdr_t qhdr;
    xmlChar *higher_layer_if;
} y_ietf_interfaces_T_interfaces_state_interface_higher_layer_if;

/* leaf-list /interfaces-state/interface/lower-layer-if */
typedef struct y_ietf_interfaces_T_interfaces_state_interface_lower_layer_if_ {
    dlq_hdr_t qhdr;
    xmlChar *lower_layer_if;
} y_ietf_interfaces_T_interfaces_state_interface_lower_layer_if;

/* container /interfaces-state/interface/statistics */
typedef struct y_ietf_interfaces_T_interfaces_state_interface_statistics_ {
    xmlChar *discontinuity_time;
    uint64 in_octets;
    uint64 in_unicast_pkts;
    uint64 in_broadcast_pkts;
    uint64 in_multicast_pkts;
    uint32 in_discards;
    uint32 in_errors;
    uint32 in_unknown_protos;
    uint64 out_octets;
    uint64 out_unicast_pkts;
    uint64 out_broadcast_pkts;
    uint64 out_multicast_pkts;
    uint32 out_discards;
    uint32 out_errors;
} y_ietf_interfaces_T_interfaces_state_interface_statistics;

/* list /interfaces-state/interface */
typedef struct y_ietf_interfaces_T_interfaces_state_interface_ {
    dlq_hdr_t qhdr;
    xmlChar *name;
    val_idref_t *type;

#ifdef u_ietf_interfaces_F_if_mib
    xmlChar *admin_status;
#endif /* u_ietf_interfaces_F_if_mib */
    xmlChar *oper_status;
    xmlChar *last_change;

#ifdef u_ietf_interfaces_F_if_mib
    int32 if_index;
#endif /* u_ietf_interfaces_F_if_mib */
    xmlChar *phys_address;
    dlq_hdr_t higher_layer_if;
    dlq_hdr_t lower_layer_if;
    uint64 speed;
    y_ietf_interfaces_T_interfaces_state_interface_statistics statistics;
} y_ietf_interfaces_T_interfaces_state_interface;

/* container /interfaces-state */
typedef struct y_ietf_interfaces_T_interfaces_state_ {
    dlq_hdr_t interface;
} y_ietf_interfaces_T_interfaces_state;

/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_interface_name_edit
* 
* Edit database object callback
* Path: /interfaces/interface/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_interface_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_interface_description_edit
* 
* Edit database object callback
* Path: /interfaces/interface/description
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_interface_description_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_interface_type_edit
* 
* Edit database object callback
* Path: /interfaces/interface/type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_interface_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_interface_enabled_edit
* 
* Edit database object callback
* Path: /interfaces/interface/enabled
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_interface_enabled_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_interface_name);


#ifdef u_ietf_interfaces_F_if_mib
/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_interface_link_up_down_trap_enable_edit
* 
* Edit database object callback
* Path: /interfaces/interface/link-up-down-trap-enable
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_interface_link_up_down_trap_enable_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_interface_name);

#endif /* u_ietf_interfaces_F_if_mib */

/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_interface_edit
* 
* Edit database object callback
* Path: /interfaces/interface
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_interface_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_edit
* 
* Edit database object callback
* Path: /interfaces
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_name_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/name
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_name_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_type_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/type
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_type_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


#ifdef u_ietf_interfaces_F_if_mib
/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_admin_status_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/admin-status
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_admin_status_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);

#endif /* u_ietf_interfaces_F_if_mib */

/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_oper_status_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/oper-status
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_oper_status_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_last_change_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/last-change
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_last_change_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


#ifdef u_ietf_interfaces_F_if_mib
/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_if_index_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/if-index
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_if_index_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);

#endif /* u_ietf_interfaces_F_if_mib */

/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_phys_address_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/phys-address
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_phys_address_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_higher_layer_if_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/higher-layer-if
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_higher_layer_if_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_lower_layer_if_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/lower-layer-if
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_lower_layer_if_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_speed_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/speed
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_speed_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_statistics_discontinuity_time_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/statistics/discontinuity-time
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_statistics_discontinuity_time_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_statistics_in_octets_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/statistics/in-octets
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_statistics_in_octets_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_statistics_in_unicast_pkts_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/statistics/in-unicast-pkts
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_statistics_in_unicast_pkts_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_statistics_in_broadcast_pkts_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/statistics/in-broadcast-pkts
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_statistics_in_broadcast_pkts_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_statistics_in_multicast_pkts_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/statistics/in-multicast-pkts
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_statistics_in_multicast_pkts_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_statistics_in_discards_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/statistics/in-discards
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_statistics_in_discards_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_statistics_in_errors_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/statistics/in-errors
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_statistics_in_errors_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_statistics_in_unknown_protos_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/statistics/in-unknown-protos
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_statistics_in_unknown_protos_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_statistics_out_octets_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/statistics/out-octets
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_statistics_out_octets_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_statistics_out_unicast_pkts_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/statistics/out-unicast-pkts
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_statistics_out_unicast_pkts_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_statistics_out_broadcast_pkts_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/statistics/out-broadcast-pkts
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_statistics_out_broadcast_pkts_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_statistics_out_multicast_pkts_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/statistics/out-multicast-pkts
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_statistics_out_multicast_pkts_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_statistics_out_discards_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/statistics/out-discards
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_statistics_out_discards_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_statistics_out_errors_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/statistics/out-errors
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_statistics_out_errors_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_statistics_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface/statistics
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_statistics_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_interface_edit
* 
* Edit database object callback
* Path: /interfaces-state/interface
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
*     k_ parameters are ancestor list key values.
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_interface_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval,
    const xmlChar *k_interfaces_state_interface_name);


/********************************************************************
* FUNCTION u_ietf_interfaces_interfaces_state_edit
* 
* Edit database object callback
* Path: /interfaces-state
* Add object instrumentation in COMMIT phase.
* 
* INPUTS:
*     see agt/agt_cb.h for details
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_interfaces_state_edit (
    ses_cb_t *scb,
    rpc_msg_t *msg,
    agt_cbtyp_t cbtyp,
    op_editop_t editop,
    val_value_t *newval,
    val_value_t *curval);

/********************************************************************
* FUNCTION u_ietf_interfaces_init
* 
* initialize the ietf-interfaces server instrumentation library
* 
* INPUTS:
*    modname == requested module name
*    revision == requested version (NULL for any)
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_init (
    const xmlChar *modname,
    const xmlChar *revision);

/********************************************************************
* FUNCTION u_ietf_interfaces_init2
* 
* SIL init phase 2: non-config data structures
* Called after running config is loaded
* 
* RETURNS:
*     error status
********************************************************************/
extern status_t u_ietf_interfaces_init2 (void);

/********************************************************************
* FUNCTION u_ietf_interfaces_cleanup
*    cleanup the server instrumentation library
* 
********************************************************************/
extern void u_ietf_interfaces_cleanup (void);

#ifdef __cplusplus
} /* end extern 'C' */
#endif

#endif