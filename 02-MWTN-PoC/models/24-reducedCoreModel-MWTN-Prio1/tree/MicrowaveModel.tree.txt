module: CoreModel-CoreNetworkModule-ObjectClasses
   +--rw NetworkElement* [uuid]
      +--rw nameList* [valueName]
      |  +--rw valueName    string
      |  +--rw value?       string
      +--ro operationalState?        OperationalState
      +--rw administrativeControl?   AdministrativeControl
      +--ro adminsatratveState?      AdministrativeState
      +--rw lifecycleState?          LifecycleState
      +--rw localIdList* [valueName]
      |  +--rw valueName    string
      |  +--rw value?       string
      +--rw uuid                     UniversalId
      +--rw _ltpRefList* [uuid]
         +--rw nameList* [valueName]
         |  +--rw valueName    string
         |  +--rw value?       string
         +--ro operationalState?        OperationalState
         +--rw administrativeControl?   AdministrativeControl
         +--ro adminsatratveState?      AdministrativeState
         +--rw lifecycleState?          LifecycleState
         +--rw localIdList* [valueName]
         |  +--rw valueName    string
         |  +--rw value?       string
         +--rw uuid                     UniversalId
         +--rw _serverLtpRefList*       -> /NetworkElement/_ltpRefList/uuid
         +--rw _clientLtpRefList*       -> /NetworkElement/_ltpRefList/uuid
         +--rw _lpList* [uuid]
         |  +--rw nameList* [valueName]
         |  |  +--rw valueName    string
         |  |  +--rw value?       string
         |  +--rw uuid                        UniversalId
         |  +--rw localIdList
         |  |  +--rw valueName?   string
         |  |  +--rw value?       string
         |  +--rw layerProtocolName?          CoreModel-CoreNetworkModule-TypeDefinitions:LayerProtocolName
         |  +--rw configuredClientCapacity?   uint64
         |  +--rw lpDirection?                CoreModel-CoreNetworkModule-TypeDefinitions:TerminationDirection
         |  +--rw terminationState?           boolean
         +--rw physicalPortReference*   string
         +--rw _ltpRefList*             -> /NetworkElement/_ltpRefList/uuid
         +--rw ltpDirection?            CoreModel-CoreNetworkModule-TypeDefinitions:TerminationDirection
module: MicrowaveModel-ObjectClasses-MwConnection
   +--rw MW_AirInterface_Pac* [layerProtocol]
   |  +--rw layerProtocol                     CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  +--ro airInterfaceCapabilityList* [airInterfaceID]
   |  |  +--ro airInterfaceID               string
   |  |  +--ro typeOfEquipment?             string
   |  |  +--ro supportedChannelPlans?       string
   |  |  +--ro txFrequencyMin?              uint64
   |  |  +--ro txFrequencyMax?              uint64
   |  |  +--ro rxFrequencyMin?              uint64
   |  |  +--ro rxFrequencyMax?              uint64
   |  |  +--ro adaptiveModulationIsAvail?   boolean
   |  |  +--ro scriptList* [scriptID]
   |  |     +--ro scriptID            string
   |  |     +--ro channelBandwidth?   uint64
   |  |     +--ro modulationScheme?   uint64
   |  |     +--ro txPowerMin?         int64
   |  |     +--ro txPowerMax?         int64
   |  |     +--ro xpicIsAvail?        boolean
   |  +--rw airInterfaceConfiguration
   |  |  +--rw airInterfaceName?         string
   |  |  +--rw radioSignalId?            string
   |  |  +--rw txFrequency?              uint64
   |  |  +--rw rxFrequency?              uint64
   |  |  +--rw txChannelBandwidth?       uint64
   |  |  +--rw rxChannelBandwidth?       uint64
   |  |  +--rw powerIsOn?                boolean
   |  |  +--rw transmitterIsOn?          boolean
   |  |  +--rw txPower?                  int64
   |  |  +--rw adaptiveModulationIsOn?   boolean
   |  |  +--rw modulationMin?            uint64
   |  |  +--rw modulationMax?            uint64
   |  |  +--rw xpicIsOn?                 boolean
   |  +--ro airInterfaceStatus
   |  |  +--ro txFrequencyCur?   uint64
   |  |  +--ro rxFrequencyCur?   uint64
   |  |  +--ro txLevelCur?       int64
   |  |  +--ro rxLevelCur?       int64
   |  |  +--ro snrCur?           int64
   |  |  +--ro linkIsUp?         boolean
   |  |  +--ro xpicIsUp?         boolean
   |  +--ro airInterfaceCurrentProblemList
   |     +--ro problemList*   string
   +--rw MW_Structure_Pac* [layerProtocol]
   |  +--rw layerProtocol             CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  +--ro structureCapability
   |  |  +--ro structureID?              string
   |  |  +--ro totalNumberOfTimeSlots?   uint64
   |  |  +--ro timeSlotCapacity?         uint64
   |  +--rw structureConfiguration
   |  |  +--rw serverID?   string
   |  +--ro structureStatus
   |     +--ro timeSlotStatusList* [structureID timeSlotID]
   |        +--ro structureID          string
   |        +--ro timeSlotID           string
   |        +--ro operationalStatus?   CoreModel-CoreFoundationModule-StateModel:OperationalState
   +--rw MW_Container_Pac* [layerProtocol]
      +--rw layerProtocol             CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
      +--ro containerCapability
      |  +--ro containerID?                     string
      |  +--ro availableKindsOfContainerList* [uuid]
      |     +--ro uuid                         CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
      |     +--ro containerName?               string
      |     +--ro numberOfTimeSlotsRequired?   uint64
      |     +--ro bundlingIsAvail?             boolean
      +--rw containerConfiguration
      |  +--rw container
      |  |  +--rw uuid?                        CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
      |  |  +--ro containerName?               string
      |  |  +--ro numberOfTimeSlotsRequired?   uint64
      |  |  +--ro bundlingIsAvail?             boolean
      |  +--rw timeSlotIDList* [structureID timeSlotID]
      |     +--rw structureID    string
      |     +--rw timeSlotID     string
      +--ro containerStatus?          string
