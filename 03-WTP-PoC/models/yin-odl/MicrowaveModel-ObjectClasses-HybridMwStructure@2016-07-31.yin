<?xml version="1.0" encoding="UTF-8"?>
<module name="MicrowaveModel-ObjectClasses-HybridMwStructure"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:MicrowaveModel-ObjectClasses-HybridMwStructure="uri:onf:MicrowaveModel-ObjectClasses-HybridMwStructure"
        xmlns:CoreModel-CoreNetworkModule-ObjectClasses="uri:onf:CoreModel-CoreNetworkModule-ObjectClasses"
        xmlns:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages="uri:onf:CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"
        xmlns:MicrowaveModel-TypeDefinitions="uri:onf:MicrowaveModel-TypeDefinitions"
        xmlns:CoreModel-CoreFoundationModule-TypeDefinitions="uri:onf:CoreModel-CoreFoundationModule-TypeDefinitions"
        xmlns:MicrowaveModel-ObjectClasses-SuperClasses="uri:onf:MicrowaveModel-ObjectClasses-SuperClasses"
        xmlns:G_874_1_model-Object_Classes="uri:onf:G_874_1_model-Object_Classes">
  <namespace uri="uri:onf:MicrowaveModel-ObjectClasses-HybridMwStructure"/>
  <prefix value="MicrowaveModel-ObjectClasses-HybridMwStructure"/>
  <import module="CoreModel-CoreNetworkModule-ObjectClasses">
    <prefix value="CoreModel-CoreNetworkModule-ObjectClasses"/>
  </import>
  <import module="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages">
    <prefix value="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages"/>
  </import>
  <import module="MicrowaveModel-TypeDefinitions">
    <prefix value="MicrowaveModel-TypeDefinitions"/>
  </import>
  <import module="CoreModel-CoreFoundationModule-TypeDefinitions">
    <prefix value="CoreModel-CoreFoundationModule-TypeDefinitions"/>
  </import>
  <import module="MicrowaveModel-ObjectClasses-SuperClasses">
    <prefix value="MicrowaveModel-ObjectClasses-SuperClasses"/>
  </import>
  <import module="G_874_1_model-Object_Classes">
    <prefix value="G_874_1_model-Object_Classes"/>
  </import>
  <organization>
    <text>ONF (Open Networking Foundation) Open Transport Working Group - Wireless Transport Project</text>
  </organization>
  <contact>
    <text>WG Web:   &lt;https://www.opennetworking.org/technical-communities/areas/specification/1931-optical-transport&gt;
         WG List:  &lt;mailto:wireless-transport@login.opennetworking.org &gt;
         WG Chair: Lyndon Ong
                   &lt;mailto:lyong@ciena.com&gt;
         WG Chair: Giorgio Cazzaniga
                   &lt;mailto:giorgio.cazzaniga@sm-optics.com&gt;</text>
  </contact>
  <description>
    <text>This module contains a collection of YANG definitions for 
         managing microwave transport networks.</text>
  </description>
  <revision date="2016-07-31">
    <description>
      <text>Initial revision.</text>
    </description>
    <reference>
      <text>ONF TR xyz: A YANG Data Model for Microwave Transport Networks.</text>
    </reference>
  </revision>
  <feature name="hybrid-microwave">
    <description>
      <text>Feature 'hybrid-microwave' is mandatory for device types transporting Ethernet + TDM.</text>
    </description>
  </feature>
  <list name="MW_HybridMwStructure_Pac">
    <description>
      <text>LTP(MWS-TTP)</text>
    </description>
    <key value="layerProtocol"/>
    <config value="true"/>
    <leaf name="layerProtocol">
      <type name="leafref">
        <path value="/CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/CoreModel-CoreNetworkModule-ObjectClasses:_ltpRefList/CoreModel-CoreNetworkModule-ObjectClasses:_lpList/CoreModel-CoreNetworkModule-ObjectClasses:uuid"/>
      </type>
      <description>
        <text>CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/_ltpRefList/_lpList/uuid</text>
      </description>
    </leaf>
    <container name="hybridMwStructureCapability">
      <config value="false"/>
      <uses name="HybridMwStructureCapability"/>
    </container>
    <container name="hybridMwStructureConfiguration">
      <config value="true"/>
      <uses name="HybridMwStructureConfiguration"/>
    </container>
    <container name="hybridMwStructureStatus">
      <config value="false"/>
      <uses name="HybridMwStructureStatus"/>
    </container>
    <list name="hybridMwStructureCurrentProblemList">
      <key value="sequenceNumber"/>
      <config value="false"/>
      <ordered-by value="system"/>
      <uses name="HybridMwStructureCurrentProblem"/>
    </list>
    <container name="hybridMwStructureCurrentPerformance">
      <config value="false"/>
      <uses name="HybridMwStructureCurrentPerformance"/>
    </container>
    <list name="hybridMwStructureHistoricalPerformanceList">
      <config value="false"/>
      <ordered-by value="system"/>
      <uses name="HybridMwStructureHistoricalPerformance"/>
    </list>
  </list>
  <grouping name="HybridMwStructureCapability">
    <description>
      <text>Describes the logical structuring of the physical capacity provided by a hybrid microwave device (TDM + Ethernet).
Basic principles for defining the Default values of Capability attributes: 1)NO Default values for attributes that MUST be delivered from the device. 2)Default values for every attribute that might be delivered. 3)The Default value shall be inside the value range of the data type of the attribute. 4)The Default value shall be outside the range of reasonable values of the attribute.
Segmentation is available.
TDM transport is available.</text>
    </description>
    <leaf name="structureId">
      <type name="CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId"/>
      <config value="false"/>
      <description>
        <text>Identifies the Structure for bundling and container.</text>
      </description>
    </leaf>
    <list name="supportedTdmStructureTypesList">
      <description>
        <text>Lists the TDM frames that are supported.</text>
      </description>
      <key value="tdmStructureTypeId"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:tdmStructureType"/>
      <min-elements value="1"/>
    </list>
    <leaf name="supportedAlarms">
      <type name="string"/>
      <config value="false"/>
      <description>
        <text>Available alarms to be listed. Mandatory:non. Names are to be separated by commas. Further alarms might be added by the device.</text>
      </description>
      <default value="Supported alarms not yet defined."/>
    </leaf>
  </grouping>
  <grouping name="HybridMwStructureConfiguration">
    <description>
      <text>Basic principles for defining the Default values of Configuration attributes: 1)NO Default values for attributes that MUST be configured by the controller/operator while starting the device. 2)Default values for every attribute that might be configured also at a later stage. 3)The Default value shall be inside the value range of the data type of the attribute. 4)The Default value shall be outside the range of reasonable values of the attribute. 5)Unless there is a value, which the attribute always has right after starting the device. 6)Configuration messages provided by the device shall contain the current configuration.</text>
    </description>
    <container name="structureType">
      <description>
        <text>TDM frame to be applied.</text>
      </description>
      <config value="true"/>
      <uses name="MicrowaveModel-TypeDefinitions:tdmStructureType"/>
    </container>
    <leaf name="numberOfTdmSegmentsToBeReserved">
      <type name="int16"/>
      <description>
        <text>Allows to configure the number of segments reserved for TDM frames of the type specified in HybridMwStructure::HybridMwStructureConfiguration::structureType</text>
      </description>
      <default value="-1"/>
    </leaf>
    <list name="problemSeverityList">
      <description>
        <text>Severity of the type of problem to be configured.</text>
      </description>
      <key value="problemId"/>
      <config value="false"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:structureProblemType"/>
    </list>
  </grouping>
  <grouping name="HybridMwStructureStatus">
    <description>
      <text>Basic principles for defining the Defaults values of Status attributes: 1)Every attribute shall have a Default value. 2)The Default value shall be inside the value range of the data type of the attribute. 3)The Default value shall be outside the range of reasonable values of the attribute. 4)Unless there is a value, which the attribute always has right after starting the device. 5)Status messages provided by the device shall either contain actual status information or if not possible these default values.</text>
    </description>
    <list name="segmentStatusList">
      <description>
        <text>Status of each segment (all TDM and one Ethernet).
Multiplicity = HybridMwStructure::StructureConfiguration::tdmReservedNumberOfSegments + 1</text>
      </description>
      <key value="segmentStatusTypeId"/>
      <ordered-by value="system"/>
      <uses name="MicrowaveModel-TypeDefinitions:segmentStatusType"/>
    </list>
    <leaf name="lastStatusChange">
      <type name="CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime"/>
      <config value="false"/>
      <description>
        <text>Time and date of the last update of the status information.
_format:yyyyMMddhhmmss.s[Z|{+|-}HHMm]; yyyy='0000'..'9999' year; MM='01'..'12' month; dd='01'..'31' day; hh='00'..'23' hour; mm='00'..'59' minute; ss='00'..'59' second; s='.0'..'.9'tenth of second (set to '.0' if EMS or NE cannot support this granularity); Z='Z' indicates UTC (rather than local time); {+|-}='+' or '-' delta from UTC; HH='00'..'23' time zone difference in hours; Mm='00'..'59' time zone difference in minutes.</text>
      </description>
    </leaf>
  </grouping>
  <grouping name="HybridMwStructureCurrentProblem">
    <uses name="MicrowaveModel-ObjectClasses-SuperClasses:MwCurrentProblem"/>
    <container name="problem">
      <uses name="MicrowaveModel-TypeDefinitions:structureProblemType"/>
    </container>
  </grouping>
  <grouping name="HybridMwStructureCurrentPerformance">
    <uses name="G_874_1_model-Object_Classes:OTN_CurrentData"/>
    <leaf name="performanceData">
      <type name="MicrowaveModel-TypeDefinitions:structurePerformanceType"/>
      <config value="false"/>
    </leaf>
  </grouping>
  <grouping name="HybridMwStructureHistoricalPerformance">
    <uses name="G_874_1_model-Object_Classes:OTN_HistoryData"/>
    <leaf name="performanceData">
      <type name="MicrowaveModel-TypeDefinitions:structurePerformanceType"/>
      <config value="false"/>
    </leaf>
  </grouping>
</module>
