module: CoreModel-CoreNetworkModule-ObjectClasses
   +--rw ForwardingConstruct* [uuid]
   |  +--rw nameList* [valueName]
   |  |  +--rw valueName    string
   |  |  +--rw value?       string
   |  +--rw labelList* [valueName]
   |  |  +--rw valueName    string
   |  |  +--rw value?       string
   |  +--rw extensionList* [valueName]
   |  |  +--rw valueName    string
   |  |  +--rw value?       string
   |  +--ro operationalState?        OperationalState
   |  +--rw administrativeControl?   AdministrativeControl
   |  +--ro adminsatratveState?      AdministrativeState
   |  +--rw lifecycleState?          LifecycleState
   |  +--rw localIdList* [valueName]
   |  |  +--rw valueName    string
   |  |  +--rw value?       string
   |  +--rw uuid                     UniversalId
   |  +--rw layerProtocolName?       CoreModel-CoreNetworkModule-TypeDefinitions:LayerProtocolName
   |  +--rw _lowerLevelFcRefList*    -> /ForwardingConstruct/uuid
   |  +--rw _fcPortList* [uuid]
   |  |  +--rw nameList* [valueName]
   |  |  |  +--rw valueName    string
   |  |  |  +--rw value?       string
   |  |  +--rw labelList* [valueName]
   |  |  |  +--rw valueName    string
   |  |  |  +--rw value?       string
   |  |  +--rw extensionList* [valueName]
   |  |  |  +--rw valueName    string
   |  |  |  +--rw value?       string
   |  |  +--ro operationalState?        OperationalState
   |  |  +--rw administrativeControl?   AdministrativeControl
   |  |  +--ro adminsatratveState?      AdministrativeState
   |  |  +--rw lifecycleState?          LifecycleState
   |  |  +--rw localIdList* [valueName]
   |  |  |  +--rw valueName    string
   |  |  |  +--rw value?       string
   |  |  +--rw uuid                     UniversalId
   |  |  +--rw _ltpRefList*             -> /NetworkElement/_ltpRefList/uuid
   |  |  +--rw role?                    CoreModel-CoreNetworkModule-TypeDefinitions:PortRole
   |  |  +--rw fcPortDirection?         CoreModel-CoreNetworkModule-TypeDefinitions:PortDirection
   |  +--rw _fcSwitchList* [uuid]
   |  |  +--rw nameList* [valueName]
   |  |  |  +--rw valueName    string
   |  |  |  +--rw value?       string
   |  |  +--rw labelList* [valueName]
   |  |  |  +--rw valueName    string
   |  |  |  +--rw value?       string
   |  |  +--rw extensionList* [valueName]
   |  |  |  +--rw valueName    string
   |  |  |  +--rw value?       string
   |  |  +--ro operationalState?         OperationalState
   |  |  +--rw administrativeControl?    AdministrativeControl
   |  |  +--ro adminsatratveState?       AdministrativeState
   |  |  +--rw lifecycleState?           LifecycleState
   |  |  +--rw localIdList* [valueName]
   |  |  |  +--rw valueName    string
   |  |  |  +--rw value?       string
   |  |  +--rw uuid                      UniversalId
   |  |  +--rw holdOffTime?              int64
   |  |  +--rw waitToRestoreTime?        int64
   |  |  +--rw protType?                 CoreModel-CoreNetworkModule-TypeDefinitions:ProtectionType
   |  |  +--rw operType?                 CoreModel-CoreNetworkModule-TypeDefinitions:OperType
   |  |  +--rw _selectedFcPortRefList*   -> /ForwardingConstruct/_fcPortList/uuid
   |  +--rw forwardingDirection?     CoreModel-CoreNetworkModule-TypeDefinitions:ForwardingDirection
   +--rw NetworkElement
      +--rw nameList* [valueName]
      |  +--rw valueName    string
      |  +--rw value?       string
      +--rw labelList* [valueName]
      |  +--rw valueName    string
      |  +--rw value?       string
      +--rw extensionList* [valueName]
      |  +--rw valueName    string
      |  +--rw value?       string
      +--ro operationalState?        OperationalState
      +--rw administrativeControl?   AdministrativeControl
      +--ro adminsatratveState?      AdministrativeState
      +--rw lifecycleState?          LifecycleState
      +--rw localIdList* [valueName]
      |  +--rw valueName    string
      |  +--rw value?       string
      +--rw uuid?                    UniversalId
      +--rw _fdRefList* [uuid]
      |  +--rw nameList* [valueName]
      |  |  +--rw valueName    string
      |  |  +--rw value?       string
      |  +--rw labelList* [valueName]
      |  |  +--rw valueName    string
      |  |  +--rw value?       string
      |  +--rw extensionList* [valueName]
      |  |  +--rw valueName    string
      |  |  +--rw value?       string
      |  +--ro operationalState?        OperationalState
      |  +--rw administrativeControl?   AdministrativeControl
      |  +--ro adminsatratveState?      AdministrativeState
      |  +--rw lifecycleState?          LifecycleState
      |  +--rw localIdList* [valueName]
      |  |  +--rw valueName    string
      |  |  +--rw value?       string
      |  +--rw uuid                     UniversalId
      |  +--rw layerProtocolNameList*   CoreModel-CoreNetworkModule-TypeDefinitions:LayerProtocolName
      |  +--rw _lowerLevelFdRefList*    -> /NetworkElement/_fdRefList/uuid
      |  +--rw _fcRefList*              -> /ForwardingConstruct/uuid
      |  +--rw _ltpRefList*             -> /NetworkElement/_ltpRefList/uuid
      +--rw _ltpRefList* [uuid]
         +--rw nameList* [valueName]
         |  +--rw valueName    string
         |  +--rw value?       string
         +--rw labelList* [valueName]
         |  +--rw valueName    string
         |  +--rw value?       string
         +--rw extensionList* [valueName]
         |  +--rw valueName    string
         |  +--rw value?       string
         +--ro operationalState?        OperationalState
         +--rw administrativeControl?   AdministrativeControl
         +--ro adminsatratveState?      AdministrativeState
         +--rw lifecycleState?          LifecycleState
         +--rw localIdList* [valueName]
         |  +--rw valueName    string
         |  +--rw value?       string
         +--rw uuid                     UniversalId
         +--rw _serverLtpRefList*       -> /NetworkElement/_ltpRefList/uuid
         +--rw _clientLtpRefList*       -> /NetworkElement/_ltpRefList/uuid
         +--rw _lpList* [uuid]
         |  +--rw nameList* [valueName]
         |  |  +--rw valueName    string
         |  |  +--rw value?       string
         |  +--rw labelList* [valueName]
         |  |  +--rw valueName    string
         |  |  +--rw value?       string
         |  +--rw extensionList* [valueName]
         |  |  +--rw valueName    string
         |  |  +--rw value?       string
         |  +--ro operationalState?           OperationalState
         |  +--rw administrativeControl?      AdministrativeControl
         |  +--ro adminsatratveState?         AdministrativeState
         |  +--rw lifecycleState?             LifecycleState
         |  +--rw localIdList* [valueName]
         |  |  +--rw valueName    string
         |  |  +--rw value?       string
         |  +--rw uuid                        UniversalId
         |  +--rw layerProtocolName?          CoreModel-CoreNetworkModule-TypeDefinitions:LayerProtocolName
         |  +--rw configuredClientCapacity?   string
         |  +--rw lpDirection?                CoreModel-CoreNetworkModule-TypeDefinitions:TerminationDirection
         |  +--rw terminationState?           boolean
         +--rw _connectedLtpRef?        -> /NetworkElement/_ltpRefList/uuid
         +--rw _peerLtpRef?             -> /NetworkElement/_ltpRefList/uuid
         +--rw physicalPortReference*   string
         +--rw _ltpRefList*             -> /NetworkElement/_ltpRefList/uuid
         +--rw ltpDirection?            CoreModel-CoreNetworkModule-TypeDefinitions:TerminationDirection
module: MicrowaveModel-ObjectClasses-MwConnection
   +--rw MW_AirInterface_Pac* [layerProtocol]
   |  +--rw layerProtocol                            -> /CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/_ltpRefList/_lpList/uuid
   |  +--ro airInterfaceCapability
   |  |  +--ro typeOfEquipment?             string
   |  |  +--ro txFrequencyMin?              int64
   |  |  +--ro txFrequencyMax?              int64
   |  |  +--ro rxFrequencyMin?              int64
   |  |  +--ro rxFrequencyMax?              int64
   |  |  +--ro adaptiveModulationIsAvail?   boolean
   |  |  +--ro mimoIsAvail?                 boolean
   |  |  +--ro mimoChannels?                int32
   |  |  +--ro alicIsAvail?                 boolean
   |  |  +--ro atpcIsAvail?                 boolean
   |  |  +--ro atpcRange?                   int32
   |  |  +--ro loopBackIsAvail?             boolean
   |  |  +--ro maintenanceTimerRange?       string
   |  |  +--ro supportedAlarms?             string
   |  |  +--ro supportedChannelPlanList* [channelPlanTypeId]
   |  |     +--ro channelPlanTypeId           CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  |     +--ro supportedChannelPlan?       string
   |  |     +--ro duplexDistanceIsVariable?   boolean
   |  |     +--ro duplexDistance?             int64
   |  |     +--ro autoFreqSelectIsAvail?      boolean
   |  |     +--ro transmissionModeList* [transmissionModeId]
   |  |        +--ro transmissionModeId    CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  |        +--ro channelBandwidth?     int64
   |  |        +--ro modulationScheme?     int32
   |  |        +--ro informationRate?      int32
   |  |        +--ro txPowerMin?           int32
   |  |        +--ro txPowerMax?           int32
   |  |        +--ro rxThreshold?          int32
   |  |        +--ro amUpshiftLevel?       int32
   |  |        +--ro amDownshiftLevel?     int32
   |  |        +--ro xpicIsAvail?          boolean
   |  +--rw airInterfaceConfiguration
   |  |  +--rw airInterfaceName?         string
   |  |  +--rw radioSignalId?            string
   |  |  +--rw txFrequency?              int64
   |  |  +--rw rxFrequency?              int64
   |  |  +--rw txChannelBandwidth?       int64
   |  |  +--rw rxChannelBandwidth?       int64
   |  |  +--rw polarization?             MicrowaveModel-TypeDefinitions:polarizationType
   |  |  +--rw powerIsOn?                boolean
   |  |  +--rw transmitterIsOn?          boolean
   |  |  +--rw txPower?                  int32
   |  |  +--rw adaptiveModulationIsOn?   boolean
   |  |  +--rw modulationMin?            int32
   |  |  +--rw modulationMax?            int32
   |  |  +--rw xpicIsOn?                 boolean
   |  |  +--rw mimoIsOn?                 boolean
   |  |  +--rw alicIsOn?                 boolean
   |  |  +--rw atpcIsOn?                 boolean
   |  |  +--rw atpcThreshUpper?          int32
   |  |  +--rw atpcThreshLower?          int32
   |  |  +--rw autoFreqSelectIsOn?       boolean
   |  |  +--rw autoFreqSelectRange?      int32
   |  |  +--rw modulationIsOn?           boolean
   |  |  +--rw loopBackIsOn?             boolean
   |  |  +--rw maintenanceTimer?         int64
   |  |  +--rw problemSeverityList* [problemId]
   |  |     +--rw problemId          CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  |     +--ro problemName?       string
   |  |     +--rw problemSeverity?   severityType
   |  +--ro airInterfaceStatus
   |  |  +--ro txFrequencyCur?       int64
   |  |  +--ro rxFrequencyCur?       int64
   |  |  +--ro txLevelCur?           int32
   |  |  +--ro rxLevelCur?           int32
   |  |  +--ro modulationCur?        int32
   |  |  +--ro informationRateCur?   int32
   |  |  +--ro snrCur?               int32
   |  |  +--ro xpdCur?               int32
   |  |  +--ro rfTempCur?            int32
   |  |  +--ro lastStatusChange?     CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime
   |  |  +--ro radioPowerIsUp?       boolean
   |  |  +--ro linkIsUp?             boolean
   |  |  +--ro xpicIsUp?             boolean
   |  |  +--ro mimoIsUp?             boolean
   |  |  +--ro alicIsUp?             boolean
   |  |  +--ro atpcIsUp?             boolean
   |  |  +--ro autoFreqSelectIsUp?   boolean
   |  |  +--ro loopBackIsUp?         boolean
   |  +--ro airInterfaceCurrentProblemList*
   |  |  +--ro sequenceNumber?   int64
   |  |  +--ro timeStamp?        CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime
   |  |  +--ro severity?         MicrowaveModel-TypeDefinitions:severityType
   |  |  +--ro problem
   |  |     +--ro problemId?         CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  |     +--ro problemName?       string
   |  |     +--ro problemSeverity?   severityType
   |  +--ro airInterfaceCurrentPerformance
   |  |  +--ro objectClass?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |  |  +--ro nameBinding?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |  |  +--ro scannerId?             string
   |  |  +--ro granularityPeriod?     G_874_1_model-Type_Definitions:GranularityPeriodType
   |  |  +--ro administrativeState?   CoreModel-CoreFoundationModule-StateModel:AdministrativeState
   |  |  +--ro suspectIntervalFlag?   boolean
   |  |  +--ro elapsedTime?           int64
   |  |  +--ro timestamp?             G_874_1_model-Type_Definitions:DateAndTime
   |  +--ro airInterfaceHistoricalPerformanceList*
   |     +--ro objectClass?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |     +--ro nameBinding?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |     +--ro historyDataId?         string
   |     +--ro periodEndTime?         CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime
   |     +--ro granularityPeriod?     G_874_1_model-Type_Definitions:GranularityPeriodType
   |     +--ro suspectIntervalFlag?   boolean
   |     +--ro es?                    int64
   |     +--ro ses?                   int64
   |     +--ro cses?                  int64
   |     +--ro unavailability?        int64
   |     +--ro txLevelMin?            int32
   |     +--ro txLevelMax?            int32
   |     +--ro txLevelAvg?            int32
   |     +--ro rxLevelMin?            int32
   |     +--ro rxLevelMax?            int32
   |     +--ro rxLevelAvg?            int32
   |     +--ro time2Symbols?          int64
   |     +--ro time4SymbolsS?         int64
   |     +--ro time4Symbols?          int64
   |     +--ro time8Symbols?          int64
   |     +--ro time16SymbolsS?        int64
   |     +--ro time16Symbols?         int64
   |     +--ro time32Symbols?         int64
   |     +--ro time64Symbols?         int64
   |     +--ro time128Symbols?        int64
   |     +--ro time256Symbols?        int64
   |     +--ro time512Symbols?        int64
   |     +--ro time512SymbolsL?       int64
   |     +--ro time1024Symbols?       int64
   |     +--ro time1024SymbolsL?      int64
   |     +--ro time2048Symbols?       int64
   |     +--ro time2048SymbolsL?      int64
   |     +--ro time4096Symbols?       int64
   |     +--ro time4096SymbolsL?      int64
   |     +--ro time8192Symbols?       int64
   |     +--ro time8192SymbolsL?      int64
   |     +--ro snrMin?                int32
   |     +--ro snrMax?                int32
   |     +--ro snrAvg?                int32
   |     +--ro xpdMin?                int32
   |     +--ro xpdMax?                int32
   |     +--ro xpdAvg?                int32
   |     +--ro rfTempMin?             int32
   |     +--ro rfTempMax?             int32
   |     +--ro rfTempAvg?             int32
   |     +--ro defectBlocksSum?       int32
   |     +--ro timePeriod?            int64
   +--rw CoChannelGroup* [uuid]
   |  +--rw uuid                    CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  +--rw airInterfaceList*       -> /CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/_ltpRefList/uuid
   |  +--rw coSortOfChannelGroup?   string
   +--rw MW_AirInterfaceDiversity_Pac* [layerProtocol]
   |  +--rw layerProtocol                                     -> /CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/_ltpRefList/_lpList/uuid
   |  +--ro airInterfaceDiversityCapability
   |  |  +--ro availableKindsOfDiversity* [diversityTypeId]
   |  |  |  +--ro diversityTypeId             CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  |  |  +--ro diversityName?              string
   |  |  |  +--ro numberOfAirInterfacesMax?   int32
   |  |  +--ro supportedAlarms?             string
   |  +--rw airInterfaceDiversityConfiguration
   |  |  +--rw airInterfaceDiversity
   |  |  |  +--rw diversityTypeId?            CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  |  |  +--ro diversityName?              string
   |  |  |  +--ro numberOfAirInterfacesMax?   int32
   |  |  +--rw airInterfaceLtpList*     -> /CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/_ltpRefList/uuid
   |  |  +--rw problemSeverityList* [problemId]
   |  |     +--rw problemId          CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  |     +--ro problemName?       string
   |  |     +--rw problemSeverity?   severityType
   |  +--ro airInterfaceDiversityStatus
   |  |  +--ro lastStatusChange?              CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime
   |  |  +--ro airInterfaceDiversityStatus?   MicrowaveModel-TypeDefinitions:airInterfaceDiversityStatusType
   |  +--ro airInterfaceDiversityCurrentProblemList*
   |  |  +--ro sequenceNumber?   int64
   |  |  +--ro timeStamp?        CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime
   |  |  +--ro severity?         MicrowaveModel-TypeDefinitions:severityType
   |  |  +--ro problem
   |  |     +--ro problemId?         CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  |     +--ro problemName?       string
   |  |     +--ro problemSeverity?   severityType
   |  +--ro airInterfaceDiversityCurrentPerformance
   |  |  +--ro objectClass?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |  |  +--ro nameBinding?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |  |  +--ro scannerId?             string
   |  |  +--ro granularityPeriod?     G_874_1_model-Type_Definitions:GranularityPeriodType
   |  |  +--ro administrativeState?   CoreModel-CoreFoundationModule-StateModel:AdministrativeState
   |  |  +--ro suspectIntervalFlag?   boolean
   |  |  +--ro elapsedTime?           int64
   |  |  +--ro timestamp?             G_874_1_model-Type_Definitions:DateAndTime
   |  +--ro airInterfaceDiversityHistoricalPerformanceList*
   |     +--ro objectClass?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |     +--ro nameBinding?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |     +--ro historyDataId?         string
   |     +--ro periodEndTime?         CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime
   |     +--ro granularityPeriod?     G_874_1_model-Type_Definitions:GranularityPeriodType
   |     +--ro suspectIntervalFlag?   boolean
   +--rw MW_Structure_Pac* [layerProtocol]
   |  +--rw layerProtocol                         -> /CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/_ltpRefList/_lpList/uuid
   |  +--ro structureCapability
   |  |  +--ro structureID?               string
   |  |  +--ro timeSlotCapacity?          int32
   |  |  +--ro totalNumberOfTimeSlots?    int32
   |  |  +--ro tdmTimeSlotsIsSupported?   boolean
   |  |  +--ro supportedAlarms?           string
   |  +--rw structureConfiguration
   |  |  +--rw tdmReservedNumberOfTimeSlots?   int32
   |  |  +--rw problemSeverityList* [problemId]
   |  |     +--rw problemId          CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  |     +--ro problemName?       string
   |  |     +--rw problemSeverity?   severityType
   |  +--ro structureStatus
   |  |  +--ro timeSlotStatusList* [timeSlotStatusTypeId]
   |  |  |  +--ro timeSlotStatusTypeId        CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  |  |  +--ro timeSlotIsReservedForTdm?   boolean
   |  |  |  +--ro priorityClass?              int32
   |  |  |  +--ro dropOrderRank?              int32
   |  |  |  +--ro operationalStatus?          CoreModel-CoreFoundationModule-StateModel:OperationalState
   |  |  +--ro lastStatusChange?     CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime
   |  +--ro structureCurrentProblemList*
   |  |  +--ro sequenceNumber?   int64
   |  |  +--ro timeStamp?        CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime
   |  |  +--ro severity?         MicrowaveModel-TypeDefinitions:severityType
   |  |  +--ro problem
   |  |     +--ro problemId?         CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  |     +--ro problemName?       string
   |  |     +--ro problemSeverity?   severityType
   |  +--ro structureCurrentPerformance
   |  |  +--ro objectClass?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |  |  +--ro nameBinding?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |  |  +--ro scannerId?             string
   |  |  +--ro granularityPeriod?     G_874_1_model-Type_Definitions:GranularityPeriodType
   |  |  +--ro administrativeState?   CoreModel-CoreFoundationModule-StateModel:AdministrativeState
   |  |  +--ro suspectIntervalFlag?   boolean
   |  |  +--ro elapsedTime?           int64
   |  |  +--ro timestamp?             G_874_1_model-Type_Definitions:DateAndTime
   |  +--ro structureHistoricalPerformanceList*
   |     +--ro objectClass?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |     +--ro nameBinding?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |     +--ro historyDataId?         string
   |     +--ro periodEndTime?         CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime
   |     +--ro granularityPeriod?     G_874_1_model-Type_Definitions:GranularityPeriodType
   |     +--ro suspectIntervalFlag?   boolean
   |     +--ro timePeriod?            int64
   +--rw MW_Container_Pac* [layerProtocol]
   |  +--rw layerProtocol                         -> /CoreModel-CoreNetworkModule-ObjectClasses:NetworkElement/_ltpRefList/_lpList/uuid
   |  +--ro containerCapability
   |  |  +--ro containerID?                     string
   |  |  +--ro availableKindsOfContainerList* [containerTypeId]
   |  |  |  +--ro containerTypeId              CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  |  |  +--ro containerName?               string
   |  |  |  +--ro numberOfTimeSlotsRequired?   int32
   |  |  |  +--ro tdmTimeSlotsIsRequired?      boolean
   |  |  |  +--ro bundlingIsAvail?             boolean
   |  |  +--ro priorityClassesIsAvail?          boolean
   |  |  +--ro encryptionIsAvail?               boolean
   |  |  +--ro packetCompressionIsAvail?        boolean
   |  |  +--ro layer2CompressionIsAvail?        boolean
   |  |  +--ro vlanCompressionIsAvail?          boolean
   |  |  +--ro qInQCompressionIsAvail?          boolean
   |  |  +--ro mplsCompressionIsAvail?          boolean
   |  |  +--ro l2vpnCompressionIsAvail?         boolean
   |  |  +--ro ipv4CompressionIsAvail?          boolean
   |  |  +--ro ipv6CompressionIsAvail?          boolean
   |  |  +--ro l3vpnCompressionIsAvail?         boolean
   |  |  +--ro layer4CompressionIsAvail?        boolean
   |  |  +--ro supportedAlarms?                 string
   |  +--rw containerConfiguration
   |  |  +--rw container
   |  |  |  +--rw containerTypeId?             CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  |  |  +--ro containerName?               string
   |  |  |  +--ro numberOfTimeSlotsRequired?   int32
   |  |  |  +--ro tdmTimeSlotsIsRequired?      boolean
   |  |  |  +--ro bundlingIsAvail?             boolean
   |  |  +--rw priorityClass?           int32
   |  |  +--rw timeSlotIDList* [structureId timeSlotId]
   |  |  |  +--rw structureId    string
   |  |  |  +--rw timeSlotId     int32
   |  |  +--rw encryptionIsOn?          boolean
   |  |  +--ro packetCompressionIsOn?   boolean
   |  |  +--ro layer2CompressionIsOn?   boolean
   |  |  +--ro vlanCompressionIsOn?     boolean
   |  |  +--ro qInQCompressionIsOn?     boolean
   |  |  +--ro mplsCompressionIsOn?     boolean
   |  |  +--ro l2vpnCompressionIsOn?    boolean
   |  |  +--ro ipv4CompressionIsOn?     boolean
   |  |  +--ro ipv6CompressionIsOn?     boolean
   |  |  +--ro l3vpnCompressionIsOn?    boolean
   |  |  +--ro layer4CompressionIsOn?   boolean
   |  |  +--rw problemSeverityList* [problemId]
   |  |     +--rw problemId          CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  |     +--ro problemName?       string
   |  |     +--rw problemSeverity?   severityType
   |  +--ro containerStatus
   |  |  +--ro lastStatusChange?   CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime
   |  |  +--ro dropOrderRank?      int32
   |  +--ro containerCurrentProblemList*
   |  |  +--ro sequenceNumber?   int64
   |  |  +--ro timeStamp?        CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime
   |  |  +--ro severity?         MicrowaveModel-TypeDefinitions:severityType
   |  |  +--ro problem
   |  |     +--ro problemId?         CoreModel-CoreFoundationModule-SuperClassesAndCommonPackages:UniversalId
   |  |     +--ro problemName?       string
   |  |     +--ro problemSeverity?   severityType
   |  +--ro containerCurrentPerformance
   |  |  +--ro objectClass?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |  |  +--ro nameBinding?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |  |  +--ro scannerId?             string
   |  |  +--ro granularityPeriod?     G_874_1_model-Type_Definitions:GranularityPeriodType
   |  |  +--ro administrativeState?   CoreModel-CoreFoundationModule-StateModel:AdministrativeState
   |  |  +--ro suspectIntervalFlag?   boolean
   |  |  +--ro elapsedTime?           int64
   |  |  +--ro timestamp?             G_874_1_model-Type_Definitions:DateAndTime
   |  +--ro containerHistoricalPerformanceList*
   |     +--ro objectClass?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |     +--ro nameBinding?           G_874_1_model-Imported_Data_Types:ObjectIdentifier
   |     +--ro historyDataId?         string
   |     +--ro periodEndTime?         CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime
   |     +--ro granularityPeriod?     G_874_1_model-Type_Definitions:GranularityPeriodType
   |     +--ro suspectIntervalFlag?   boolean
   |     +--ro txEthernetBytesMaxS?   int64
   |     +--ro txEthernetBytesMaxM?   int64
   |     +--ro txEthernetBytesSum?    int64
   |     +--ro timePeriod?            int64
   +--rw MwCurrentProblem* [sequenceNumber]
      +--rw sequenceNumber    int64
      +--rw timeStamp?        CoreModel-CoreFoundationModule-TypeDefinitions:DateAndTime
      +--ro severity?         MicrowaveModel-TypeDefinitions:severityType
